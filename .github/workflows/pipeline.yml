---
#################################
#################################
## Super Linter GitHub Actions ##
#################################
#################################
name: Verify Code Base

#############################
# Start the job on all push #
#############################
on:
  #push:
    #branches-ignore: [main]
  pull_request:
    branches: [main]

###############
# Set the Job #
###############
jobs:
  build:
    # Name the Job
    name: Build & Verify Code Base
    # Set the agent to run on
    runs-on: ubuntu-latest

    ############################################
    # Grant status permission for MULTI_STATUS #
    ############################################
    permissions:
      contents: read
      packages: read
      statuses: write
      checks: write

    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper
          # list of changed files within `super-linter`
          fetch-depth: 0

      ################################
      # Run Linter against code base #
      ################################
      - name: Lint Code Base
        uses: super-linter/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Unit Tests
        uses: zyborg/dotnet-tests-report@v1
        with:
          project_path: src/Tests/PingLight.Core.Tests
          report_name: my_project_tests
          report_title: My Project Tests
          github_token: ${{ secrets.GITHUB_TOKEN }}
          set_check_status_from_test_outcome: true

      # - name: Run unit tests with report
      #   uses: zyborg/dotnet-tests-report@v1
      #   with:
      #     project_path: src/Tests/PingLight.Core.Tests
      #     report_name: my_project_tests_report
      #     report_title: My Project Tests Report
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     gist_name: my_project_tests_report.md
      #     gist_badge_label: 'Core Tests: %Counters_passed%/%Counters_total%'
      #     gist_token: ${{ secrets.GIST_TOKEN }}
      #     set_check_status_from_test_outcome: true

